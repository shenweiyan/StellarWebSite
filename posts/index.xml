<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Stellar Hugo Theme</title>
    <link>/posts/</link>
    <description>Recent content on Stellar Hugo Theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 12 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Basic usage</title>
      <link>/posts/hugo/basic-usage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/posts/hugo/basic-usage/</guid>
      <description>Test your installation # After installing Hugo, test your installation by running:
1 hugo version You should see something like:
1 hugo v0.105.0-0e3b42b4a9bdeb4d866210819fc6ddcf51582ffa+extended linux/amd64 BuildDate=2022-10-28T12:29:05Z VendorInfo=snap:0.105.0 Display available commands # To see a list of the available commands and flags:
1 hugo help To get help with a subcommand, use the --help flag. For example:
1 hugo server --help Build your site # To build your site, cd into your project directory and run:</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>/posts/hugo/hugo-template-primer/</link>
      <pubDate>Sun, 12 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/posts/hugo/hugo-template-primer/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>/posts/hugo/getting-started-with-hugo/</link>
      <pubDate>Sun, 12 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/posts/hugo/getting-started-with-hugo/</guid>
      <description>Step 1. Install Hugo # Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs # Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:</description>
    </item>
    
    <item>
      <title>MathJax 支持</title>
      <link>/posts/hugo/mathjax%E6%94%AF%E6%8C%81/</link>
      <pubDate>Sun, 12 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/posts/hugo/mathjax%E6%94%AF%E6%8C%81/</guid>
      <description>Inline Math # Example$abc$ $e^{\pi i}=-1$ $\frac{3}{2}$$abc$ $e^{\pi i}=-1$ $\frac{3}{2}$ Display Math # Example$$ \sum_{i=1}^{n}\int_{0}^{\pi}\log_2{e^n} $$$$ \sum_{i=1}^{n}\int_{0}^{\pi}\log_2{e^n} $$ Using Latex Codeblock # ``` latex f(n)= \begin{cases} f(n-1)+f(n-2) &amp;amp; n \ge 3 \\ 1 &amp;amp; n=1,2 \end{cases} ``` $$f(n)= \begin{cases} f(n-1)&amp;#43;f(n-2) &amp;amp; n \ge 3 \\ 1 &amp;amp; n=1,2 \end{cases}$$</description>
    </item>
    
    <item>
      <title>扩展语法支持</title>
      <link>/posts/hugo/%E6%89%A9%E5%B1%95%E8%AF%AD%E6%B3%95%E6%94%AF%E6%8C%81/</link>
      <pubDate>Sun, 12 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/posts/hugo/%E6%89%A9%E5%B1%95%E8%AF%AD%E6%B3%95%E6%94%AF%E6%8C%81/</guid>
      <description>MkDocs 语法 # Hint # ::: markdown { title=Example, render=true } !!! note `markdown` text ::: markdown { title=Example, render=true } !!! note Custom Title `markdown` text
::: markdown { title=Example, render=true } ??? note Collapsible `markdown` text ::: markdown { title=Example, render=true } ???+ note Collapsible Open `markdown` text
Hint 允许包含和嵌套任意内容。
Example 1 2 3 4 ???+ bug ???+ bug ???+ bug Nested bugs. bug bug bug Nested bugs.</description>
    </item>
    
    <item>
      <title>All in Yuque</title>
      <link>/posts/note/all-in-yuque/</link>
      <pubDate>Tue, 07 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/posts/note/all-in-yuque/</guid>
      <description>📢本 文章同步自作者的语雀知识库，请点击这里阅读原文。
语雀用了这么多年，有太多太多的东西保存在语雀了，这两天一直都在思考 All in Yuque 的这个问题。
想先聊一下，为什么不再折腾个人的独立博客了。
首先，独立博客的选择可以有很多，WordPress、Hexo、Jeykll、Hugo &amp;hellip;&amp;hellip;，每一次都是先被某一个主题（自己也在 博客 | 那些好看有内涵的博客与模板 里面搜集了一些）吸引住，费了九牛二虎之力搭建起来，更新一段时间文章；然后又被其他的主题或者框架吸引，接着继续去折腾；反反复复，中间耗费了大量的时间，累计沉淀的文档知识反而不多，有种丢了西瓜拣芝麻的感觉。
其次，独立博客本身的限制。主要在于没法满足私有+分享的需求，大多独立博客的功能在于公开分享，私有文档的功能极其薄弱甚至根本没有。
第三，基本上从 2018 年以来，个人的所有知识文档就转移到语雀了。曾几何时，受谢益辉老师博客的影响，自己也折腾了一个 ICS-Hugo-Theme 的 Hugo主题，而基于这个主题的个人独立博客现在基本变成存档的状态了，只是有空的时候会偶尔去折腾更新一下。
第四，GitHub 上有一个中文独立博客列表的项目，很不错，也很佩服那些十年如一日更新的人——他们给我的一个启示就是专注积累和沉淀，主题框架还是相对次要的(不值得花太多时间去折腾)。
也简单聊一下，为什么放弃了其他的一些如博客园、掘金之类的平台（CSDN 就算了，乌烟瘴气的）。
这些平台很大的一个特色是社区氛围挺好，对于互联网搜索分享也有一定优势，但是对私有文档文档支持很差，这也是我放弃的主要原因；其次是编辑体验也一般。
说到这里，顺便提一下博客园——个人加入博客园（https://www.cnblogs.com/shenweiyan/）也已经有 8 年多，对博客园的写作氛围和几十年如一日纯粹无广告的态度相当赞赏，但私有文档的支持的确也基本等于零（也许是我没有找到正确的打开方式吧）。
最后，回到今天的话题。
All in Yuque 其实就目前来说是可以的，自己一直以来也基本上这么干了，只是还有些地方不够满意而已。
例如，小记，中规中矩但贵在编辑器支持的样式多；眼馋 Flomo 的 UI 简洁和逻辑清晰，但人家不支持插入代码。
例如，知识库，编辑体验已经很好了（虽然还有可以做得更好的细节，如 Web 端编辑同时展示左边大纲），但最大的遗憾还是互联网比较难搜索到语雀的内容（好像目前无能为力）。
还要吐槽一下知识库文档的段落距离——跟行距相似度太高了，简直分辨不出来——看的好难受！空一行行距又太高——我好难😭
例如，存量的话题知识库，极好的一个知识库类型，可惜不能按照标题名称排序（相当简单的一个小功能，却一拖再拖，未能上线）；嵌入语雀内容在话题知识库知识库中也不如人意，最起码渲染速度就有点让人抓狂了；还有最坑的一点，话题知识库不能插入本地视频！
例如，逛逛，能看的东西好像太少了，也不能刷新换一批；另外还有一个感觉（不知道是不是我的错觉），就是语雀对于前端、设计、以及一些方法论的东西尤其看重，逛逛/推荐里面很多这些方面的文档内容，其他方向的内容极少。</description>
    </item>
    
    <item>
      <title>博客和笔记的那些事情</title>
      <link>/posts/note/2022-11-02-note-and-blog/</link>
      <pubDate>Wed, 02 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/note/2022-11-02-note-and-blog/</guid>
      <description>这些年来笔记换的比较少——主要是从 2018 年以来，一直用语雀作为主力笔记懒得去折腾了。但是到了 2022 年，事情似乎出现了一些转变。 首先，是语雀的个人用户的话题知识库下线——并入了空间； 其次，语雀的问题反馈，由原来的公开可讨论转变成了类似私信一样的单向反馈； 第三，语雀 2022 年秋季知识库大会的会员收费风波！——语雀的定位改变为创作工具，而不在是内容社区，相应的新的付费策略，也会造成了免费用户无法继续用语雀作为自己的个人博客。这是最致命的一次信任危机。
语雀个人版新定价的细则和思考 - 境同 语雀个人定价调整的致歉 - 玉伯 如何看待语雀付费策略？ - 知乎 虽然个人的语雀付费已经到了 2037 年，但是随着越来越多的文档托管在了语雀，不支持批量 md 导出的确让人心生忧虑。 几经考虑之下，在开始 Plan B 前先明确一下个人使用云端笔记无非基于几点考虑：
同步方便，现在更加注重数据自己可控，最好笔记可以批量导出，或者直接本地保存； 同时支持私密、公开两种笔记模式； 支持 markdown 语法； 支持全文搜索； 最好支持 web 直接使用； &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. 现在 Obsidian 进行探索中，强悍的搜索，丰富的插件，算是吸引我的一个方面；如果不是官方提供的同步和发布插件价格相对贵了一些，或许早就从语雀开始往 Obsidian 进行迁移了吧！ Obsidian 也是书本式的文章结构，这一点跟语雀是一致的，但界面的设计和逻辑要比语雀要好太多太多了，退一万步来说语雀甚至可以参考一下 Obsidian 的一些界面设计！
Obsidian 结合一些插件使用，可谓事半功倍。 不得不说的一点体验。
使用语雀这么多年，转战其他笔记软件真是一件费心又纠结的事情——语雀的写作体验很好但界面逻辑和 UI 经常变，OBS 总体很完美但学习成本高。
作为知识沉淀和管理，更希望能做到开箱即用，免去各种折腾的时间让用者专注于文字的组织和写作，从这一点来说，或许可以再给语雀一点时间，如果依旧是失望和粗暴，再做 Plan B 迁移也来得及。
还是选择继续回到语雀，且看它接下来一年的表现吧！</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>/posts/hugo/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>/posts/hugo/migrate-from-jekyll/</guid>
      <description>Move static content to static # Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title></title>
      <link>/archives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archives/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
